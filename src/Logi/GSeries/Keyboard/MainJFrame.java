/*
 * Copyright (C) 2017 Mohamad Saada
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package Logi.GSeries.Keyboard;

import Logi.GSeries.Libraries.IOOperations;
import Logi.GSeries.Libraries.Keyboard;
import Logi.GSeries.Libraries.Settings;

/**
 *
 * @author Mohamad Saada
 */
public class MainJFrame extends javax.swing.JFrame {

    private Object jInternalKeyboardFrame = null;
    private Keyboard.KeyboardModel model = Keyboard.KeyboardModel.NoLogiKeyboard;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
    }

    public void setKeyboardFrameAndModel(Keyboard.KeyboardModel model, Object frame) {
        this.model = model;
        this.jInternalKeyboardFrame = frame;
    }

    public Object getKeyboardFrame() {
        return this.jInternalKeyboardFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jDesktopPaneMain = new javax.swing.JDesktopPane();
        jMenuBarMain = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemLoadProfile = new javax.swing.JMenuItem();
        jMenuItemSaveProfile = new javax.swing.JMenuItem();
        jMenuItemSetProfile = new javax.swing.JMenuItem();
        jMenuItemResetProfile = new javax.swing.JMenuItem();
        jSeparatorLoadSaveSetReset = new javax.swing.JPopupMenu.Separator();
        jMenuItemImportSettings = new javax.swing.JMenuItem();
        jMenuItemExportSettings = new javax.swing.JMenuItem();
        jSeparatorImportExport = new javax.swing.JPopupMenu.Separator();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuItemSettings = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setState(1);

        jDesktopPaneMain.setLayout(new java.awt.BorderLayout());
        jScrollPane1.setViewportView(jDesktopPaneMain);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jMenuFile.setText("File");

        jMenuItemLoadProfile.setText("Load");
        jMenuItemLoadProfile.setEnabled(false);
        jMenuItemLoadProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLoadProfileActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemLoadProfile);

        jMenuItemSaveProfile.setText("Save");
        jMenuItemSaveProfile.setEnabled(false);
        jMenuItemSaveProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveProfileActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSaveProfile);

        jMenuItemSetProfile.setText("Set");
        jMenuItemSetProfile.setEnabled(false);
        jMenuItemSetProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSetProfileActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSetProfile);

        jMenuItemResetProfile.setText("Reset");
        jMenuItemResetProfile.setEnabled(false);
        jMenuItemResetProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemResetProfileActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemResetProfile);
        jMenuFile.add(jSeparatorLoadSaveSetReset);

        jMenuItemImportSettings.setText("Import Settings");
        jMenuItemImportSettings.setEnabled(false);
        jMenuItemImportSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemImportSettingsActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemImportSettings);

        jMenuItemExportSettings.setText("Export Settings");
        jMenuItemExportSettings.setEnabled(false);
        jMenuItemExportSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportSettingsActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExportSettings);
        jMenuFile.add(jSeparatorImportExport);

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBarMain.add(jMenuFile);

        jMenuEdit.setText("Edit");

        jMenuItemSettings.setText("Settings");
        jMenuItemSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSettingsActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemSettings);

        jMenuBarMain.add(jMenuEdit);

        setJMenuBar(jMenuBarMain);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSettingsActionPerformed
        // TODO add your handling code here:
        SettingsJDialog settingsJDialog = new SettingsJDialog(this, false);
        settingsJDialog.setVisible(true);
    }//GEN-LAST:event_jMenuItemSettingsActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemLoadProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLoadProfileActionPerformed
        switch (model) {
            case Logi910SpectrumUSQWERTY:
                ((G910SpectrumUSQWERTY)jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case Logi910SpectrumUKQWERTY:
                ((G910SpectrumUKQWERTY) jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case Logi910SparkUSQWERTY:
                ((G910SparkUSQWERTY)jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case Logi910SparkUKQWERTY:
                ((G910SparkUKQWERTY) jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case Logi810SpectrumUSQWERTY:
                ((G810SpectrumUSQWERTY)jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case Logi810SpectrumUKQWERTY:
                //((G810SpectrumUKQWERTY)jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case Logi610OrionUSQWERTY:
                ((G610OrionUSQWERTY)jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case Logi610OrionUKQWERTY:
                //((G610OrionUKQWERTY)jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case Logi410AtlasSpectrumUSQWERTY:
                ((G410AtlasSpectrumUSQWERTY)jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case Logi410AtlasSpectrumUKQWERTY:
                //((G410AtlasSpectrumUKQWERTY)jInternalKeyboardFrame).jButtonLoadProfile.doClick();
                break;
            case NoLogiKeyboard:
            default:
                this.jMenuItemLoadProfile.setVisible(false);
                this.jMenuItemSaveProfile.setVisible(false);
                this.jMenuItemSetProfile.setVisible(false);
                this.jMenuItemResetProfile.setVisible(false);
                this.jSeparatorLoadSaveSetReset.setVisible(false);
                this.jMenuItemLoadProfile.setEnabled(false);
                this.jMenuItemSaveProfile.setEnabled(false);
                this.jMenuItemSetProfile.setEnabled(false);
                this.jMenuItemResetProfile.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_jMenuItemLoadProfileActionPerformed

    private void jMenuItemSaveProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveProfileActionPerformed
        switch (model) {
            case Logi910SpectrumUSQWERTY:
                ((G910SpectrumUSQWERTY)jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case Logi910SpectrumUKQWERTY:
                ((G910SpectrumUKQWERTY) jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case Logi910SparkUSQWERTY:
                ((G910SparkUSQWERTY)jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case Logi910SparkUKQWERTY:
                ((G910SparkUKQWERTY) jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case Logi810SpectrumUSQWERTY:
                ((G810SpectrumUSQWERTY)jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case Logi810SpectrumUKQWERTY:
                //((G810SpectrumUKQWERTY)jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case Logi610OrionUSQWERTY:
                ((G610OrionUSQWERTY)jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case Logi610OrionUKQWERTY:
                //((G610OrionUKQWERTY)jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case Logi410AtlasSpectrumUSQWERTY:
                ((G410AtlasSpectrumUSQWERTY)jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case Logi410AtlasSpectrumUKQWERTY:
                //((G410AtlasSpectrumUKQWERTY)jInternalKeyboardFrame).jButtonSaveProfile.doClick();
                break;
            case NoLogiKeyboard:
            default:
                this.jMenuItemLoadProfile.setVisible(false);
                this.jMenuItemSaveProfile.setVisible(false);
                this.jMenuItemSetProfile.setVisible(false);
                this.jMenuItemResetProfile.setVisible(false);
                this.jSeparatorLoadSaveSetReset.setVisible(false);
                this.jMenuItemLoadProfile.setEnabled(false);
                this.jMenuItemSaveProfile.setEnabled(false);
                this.jMenuItemSetProfile.setEnabled(false);
                this.jMenuItemResetProfile.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_jMenuItemSaveProfileActionPerformed

    private void jMenuItemSetProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSetProfileActionPerformed
        switch (model) {
            case Logi910SpectrumUSQWERTY:
                ((G910SpectrumUSQWERTY)jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case Logi910SpectrumUKQWERTY:
                ((G910SpectrumUKQWERTY) jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case Logi910SparkUSQWERTY:
                ((G910SparkUSQWERTY)jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case Logi910SparkUKQWERTY:
                ((G910SparkUKQWERTY) jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case Logi810SpectrumUSQWERTY:
                ((G810SpectrumUSQWERTY)jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case Logi810SpectrumUKQWERTY:
                //((G810SpectrumUKQWERTY)jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case Logi610OrionUSQWERTY:
                ((G610OrionUSQWERTY)jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case Logi610OrionUKQWERTY:
                //((G610OrionUKQWERTY)jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case Logi410AtlasSpectrumUSQWERTY:
                ((G410AtlasSpectrumUSQWERTY)jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case Logi410AtlasSpectrumUKQWERTY:
                //((G410AtlasSpectrumUKQWERTY)jInternalKeyboardFrame).jButtonSetProfile.doClick();
                break;
            case NoLogiKeyboard:
            default:
                this.jMenuItemLoadProfile.setVisible(false);
                this.jMenuItemSaveProfile.setVisible(false);
                this.jMenuItemSetProfile.setVisible(false);
                this.jMenuItemResetProfile.setVisible(false);
                this.jSeparatorLoadSaveSetReset.setVisible(false);
                this.jMenuItemLoadProfile.setEnabled(false);
                this.jMenuItemSaveProfile.setEnabled(false);
                this.jMenuItemSetProfile.setEnabled(false);
                this.jMenuItemResetProfile.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_jMenuItemSetProfileActionPerformed

    private void jMenuItemResetProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemResetProfileActionPerformed
        switch (model) {
            case Logi910SpectrumUSQWERTY:
                ((G910SpectrumUSQWERTY)jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case Logi910SpectrumUKQWERTY:
                ((G910SpectrumUKQWERTY) jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case Logi910SparkUSQWERTY:
                ((G910SparkUSQWERTY)jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case Logi910SparkUKQWERTY:
                ((G910SparkUKQWERTY) jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case Logi810SpectrumUSQWERTY:
                ((G810SpectrumUSQWERTY)jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case Logi810SpectrumUKQWERTY:
                //((G810SpectrumUKQWERTY)jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case Logi610OrionUSQWERTY:
                ((G610OrionUSQWERTY)jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case Logi610OrionUKQWERTY:
                //((G610OrionUKQWERTY)jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case Logi410AtlasSpectrumUSQWERTY:
                ((G410AtlasSpectrumUSQWERTY)jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case Logi410AtlasSpectrumUKQWERTY:
                //((G410AtlasSpectrumUKQWERTY)jInternalKeyboardFrame).jButtonResetProfile.doClick();
                break;
            case NoLogiKeyboard:
            default:
                this.jMenuItemLoadProfile.setVisible(false);
                this.jMenuItemSaveProfile.setVisible(false);
                this.jMenuItemSetProfile.setVisible(false);
                this.jMenuItemResetProfile.setVisible(false);
                this.jSeparatorLoadSaveSetReset.setVisible(false);
                this.jMenuItemLoadProfile.setEnabled(false);
                this.jMenuItemSaveProfile.setEnabled(false);
                this.jMenuItemSetProfile.setEnabled(false);
                this.jMenuItemResetProfile.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_jMenuItemResetProfileActionPerformed

    private void jMenuItemImportSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemImportSettingsActionPerformed
        Settings importedSettings = IOOperations.importSettings();
        if (importedSettings != null) {
            IOOperations.saveCurrentSettings(importedSettings);
        }
    }//GEN-LAST:event_jMenuItemImportSettingsActionPerformed

    private void jMenuItemExportSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportSettingsActionPerformed
        IOOperations.exportSettings(IOOperations.loadCurrentSettingsObjectFromFile());
    }//GEN-LAST:event_jMenuItemExportSettingsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDesktopPane jDesktopPaneMain;
    private javax.swing.JMenuBar jMenuBarMain;
    private javax.swing.JMenu jMenuEdit;
    public javax.swing.JMenu jMenuFile;
    public javax.swing.JMenuItem jMenuItemExit;
    public javax.swing.JMenuItem jMenuItemExportSettings;
    public javax.swing.JMenuItem jMenuItemImportSettings;
    public javax.swing.JMenuItem jMenuItemLoadProfile;
    public javax.swing.JMenuItem jMenuItemResetProfile;
    public javax.swing.JMenuItem jMenuItemSaveProfile;
    public javax.swing.JMenuItem jMenuItemSetProfile;
    private javax.swing.JMenuItem jMenuItemSettings;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JPopupMenu.Separator jSeparatorImportExport;
    public javax.swing.JPopupMenu.Separator jSeparatorLoadSaveSetReset;
    // End of variables declaration//GEN-END:variables
}
